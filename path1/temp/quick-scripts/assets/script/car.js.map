{"version":3,"sources":["car.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    // 上一帧 为了计算角度\r\n    @property\r\n    target = new cc.Vec2(0, 0);\r\n\r\n    // 动画节点\r\n    @property\r\n    selfNode = null\r\n\r\n    // 当前节点\r\n    @property\r\n    spriteNode = null\r\n\r\n    // 当前节点type\r\n    @property\r\n    spriteType = 0\r\n\r\n    // 其他碰撞节点暂存\r\n    @property\r\n    othersPrite = null\r\n\r\n    // main\r\n    @property\r\n    main = null\r\n\r\n    @property\r\n    count = 0\r\n\r\n    random(lower, upper) {\r\n        return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n    }\r\n\r\n    onLoad() {\r\n        this.spriteNode = this.getComponent(cc.Sprite)\r\n        this.selfNode = this.getComponent(cc.Animation)\r\n        this.main=cc.find(\"Canvas\").getComponent(\"main\");\r\n        var random = this.random(0, 3);\r\n        // console.log(random);\r\n        if (random == 2) { random = 0 }\r\n        // this.selfNode.play('car' + random)\r\n        this.selfNode.play('car0')\r\n        this.selfNode.on('finished', this.removeNode, this);\r\n    }\r\n\r\n    start() {\r\n        this.target.x = this.node.x;\r\n        this.target.y = this.node.y;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.target.x != this.node.x) {\r\n            //汽车转弯逻辑\r\n            var dx = this.target.x - this.node.x;\r\n            var dy = this.target.y - this.node.y;\r\n            var dir = cc.v2(dx, dy);\r\n            var angle = dir.signAngle(cc.v2(1, 0));\r\n            var degree = angle / Math.PI * 180;\r\n            this.node.angle = -degree - 180;\r\n            this.target.x = this.node.x;\r\n            this.target.y = this.node.y;\r\n\r\n            // 动画状态\r\n            var manager = cc.director.getCollisionManager();\r\n            manager.enabled = true;\r\n            manager.enabledDebugDraw = true;\r\n\r\n            // 实时判断碰撞体是否生效\r\n            // if(this.othersPrite!=null){\r\n            //     if (this.othersPrite.getComponent('lights') == null) {\r\n            //         // 当碰撞为车,判断前车状态,若前车停止则激活当前车行驶\r\n            //         var ani=this.othersPrite.getComponent(cc.Animation)\r\n            //         ani.on('resume', this.toresume, this);\r\n            //     } else {\r\n            //         // 当碰撞为灯\r\n            //         var type = this.othersPrite.getComponent('lights').type\r\n            //         if (type == 0) {\r\n            //             this.selfNode.pause();\r\n            //         } else {\r\n            //             this.selfNode.resume();\r\n            //         }\r\n            //     }\r\n            //     this.othersPrite=null;\r\n            // }\r\n\r\n            if(this.othersPrite!=null){\r\n                var ani=this.othersPrite.getComponent(cc.Animation)\r\n                ani.on('resume', this.toresume, this);\r\n            }\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    // 判断前车状态,若前车顺利通过红绿灯且自己不碰撞红灯,当前车继续前行\r\n    toresume(){\r\n        // this.scheduleOnce(function(){\r\n        //     this.selfNode.resume();\r\n        // },1)\r\n        this.selfNode.resume();\r\n        this.othersPrite=null;\r\n    }\r\n\r\n    // 动画完事,销毁对象\r\n    removeNode() {\r\n        this.node.destroy();\r\n    }\r\n\r\n    onCollisionEnter(other, self) {\r\n        this.count++;\r\n        console.log('**************************************'+this.count)\r\n        if (other.getComponent('lights') == null) {\r\n            // 当碰撞到车,停止\r\n            this.selfNode.pause();\r\n            // 将碰撞到的对象记录给othersPrite\r\n            this.othersPrite = other;\r\n        } else {\r\n            // 当碰撞到灯,判断是红绿灯\r\n            var type = other.node.getComponent('lights').type\r\n            console.log(type);\r\n            if (type == 0) {\r\n                this.selfNode.pause();\r\n            } else {\r\n                this.selfNode.resume();\r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n"]}